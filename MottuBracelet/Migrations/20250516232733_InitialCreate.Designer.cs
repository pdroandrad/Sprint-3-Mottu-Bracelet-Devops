// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuBracelet.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuBracelet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250516232733_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imei")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Placa")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("MOTO_NET", (string)null);
                });

            modelBuilder.Entity("MottuBracelet.Model.Dispositivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MotoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("StatusDispositivo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("MotoId")
                        .IsUnique()
                        .HasFilter("\"MotoId\" IS NOT NULL");

                    b.HasIndex("PatioId");

                    b.ToTable("DISPOSITIVO_NET", (string)null);
                });

            modelBuilder.Entity("MottuBracelet.Model.HistoricoPatio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("MotoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("PatioId");

                    b.ToTable("HISTORICOPATIO_NET", (string)null);
                });

            modelBuilder.Entity("MottuBracelet.Model.Patio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdministradorResponsavel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("PATIO_NET", (string)null);
                });

            modelBuilder.Entity("Moto", b =>
                {
                    b.HasOne("MottuBracelet.Model.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuBracelet.Model.Dispositivo", b =>
                {
                    b.HasOne("Moto", "Moto")
                        .WithOne("Dispositivo")
                        .HasForeignKey("MottuBracelet.Model.Dispositivo", "MotoId");

                    b.HasOne("MottuBracelet.Model.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId");

                    b.Navigation("Moto");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuBracelet.Model.HistoricoPatio", b =>
                {
                    b.HasOne("Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId");

                    b.HasOne("MottuBracelet.Model.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId");

                    b.Navigation("Moto");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuBracelet.Model.Patio", b =>
                {
                    b.OwnsOne("MottuBracelet.Model.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("PatioId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<string>("Complemento")
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<int>("Numero")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.HasKey("PatioId");

                            b1.ToTable("PATIO_NET");

                            b1.WithOwner()
                                .HasForeignKey("PatioId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("Moto", b =>
                {
                    b.Navigation("Dispositivo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
